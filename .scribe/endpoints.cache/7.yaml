## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: |-

  APIs for managing User
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      title: 'List User'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      limit:
        name: limit
        description: 'Limit Users of page. Ex: 20'
        required: false
        example: 19
        type: integer
      page:
        name: page
        description: 'Current Page'
        required: false
        example: 20
        type: integer
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "code": 200,
           "locale": "en",
           "message": "OK",
           "data": {
           "current_page": 1,
           "data": [
               {
                   "id": 1,
                   "name": "admin",
                   "email": "admin@test.com",
                   "email_verified_at": null,
                   "password": "$2y$10$0gS7Ga.KVrB9A0i6NW8j6.cttgAX3t7kVfuLEi3.p.5hSV9tPeEaq",
                   "actived": 1,
                   "role": "admin",
                   "remember_token": null,
                   "created_at": null,
                   "updated_at": null
               },
           ],
           "first_page_url": "http://localhost:8000/api/v1/users?page=1",
           "from": 1,
           "last_page": 1,
           "last_page_url": "http://localhost:8000/api/v1/users?page=1",
           "next_page_url": null,
           "path": "http://localhost:8000/api/v1/users",
           "per_page": 15,
           "prev_page_url": null,
           "to": 1,
           "total": 1
           }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      title: 'Create new User'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'User Name max:200. Ex: admin'
        required: false
        example: ut
        type: string
      email:
        name: email
        description: 'User Email send email verity. Ex: admin@gmail.com'
        required: false
        example: velit
        type: string
      password:
        name: password
        description: 'User Password Hash md5. Ex: abc@123'
        required: false
        example: nisi
        type: string
      role:
        name: role
        description: 'User role; there are two role: admin and user'
        required: false
        example: odio
        type: string
      checkPass:
        name: checkPass
        description: 'Confirm Password if correct you can create'
        required: false
        example: ipsum
        type: string
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "code": 200,
           "locale": "en",
           "message": "OK",
           "data": {
               "item": {
                   "id": 1,
                   "name": "admin",
                   "email": "admin@test.com",
                   "email_verified_at": null,
                   "password": "$2y$10$0gS7Ga.KVrB9A0i6NW8j6.cttgAX3t7kVfuLEi3.p.5hSV9tPeEaq",
                   "actived": 1,
                   "role": "admin",
                   "remember_token": null,
                   "created_at": null,
                   "updated_at": null
               }
           }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Get User info'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'User ID. Ex: 1'
        required: true
        example: 6
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "code": 200,
           "locale": "en",
           "message": "OK",
           "data": {
               "item": {
                   "id": 1,
                   "name": "admin",
                   "email": "admin@test.com",
                   "email_verified_at": null,
                   "password": "$2y$10$0gS7Ga.KVrB9A0i6NW8j6.cttgAX3t7kVfuLEi3.p.5hSV9tPeEaq",
                   "actived": 1,
                   "role": "admin",
                   "remember_token": null,
                   "created_at": null,
                   "updated_at": null
               }
           }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Update User'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'User ID. Ex: 1'
        required: true
        example: 17
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'User Name max:200. Ex: admin'
        required: false
        example: perspiciatis
        type: string
      password:
        name: password
        description: 'User Password Hash md5. Ex: abc@123'
        required: false
        example: ducimus
        type: string
      email:
        name: email
        description: 'User Email send email verity. Ex: admin@gmail.com'
        required: false
        example: sed
        type: string
      checkPass:
        name: checkPass
        description: 'Confirm Password if correct you can create'
        required: false
        example: ut
        type: string
      role:
        name: role
        description: 'User role; there are two role: admin and user'
        required: false
        example: consequatur
        type: string
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "code": 200,
           "locale": "en",
           "message": "OK",
           "data": {
               "item": {
                   "id": 1,
                   "name": "admin",
                   "email": "admin@test.com",
                   "email_verified_at": null,
                   "password": "$2y$10$0gS7Ga.KVrB9A0i6NW8j6.cttgAX3t7kVfuLEi3.p.5hSV9tPeEaq",
                   "actived": 1,
                   "role": "admin",
                   "remember_token": null,
                   "created_at": null,
                   "updated_at": null
               }
           }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Delete User'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'User ID. Ex: 1'
        required: true
        example: 12
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "code": 200,
          "locale": "en",
          "message": "OK",
          "data": { }
          }
        headers: []
        description: '200'
    responseFields: []
