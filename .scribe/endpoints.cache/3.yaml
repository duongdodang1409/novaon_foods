## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Items management'
description: |-

  APIs for managing items
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/items
    metadata:
      title: 'List Items'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters:
      limit:
        name: limit
        description: 'Limit Items of page. Ex: 20'
        required: false
        example: 2
        type: integer
      page:
        name: page
        description: 'Current Page'
        required: false
        example: 11
        type: integer
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "code": 200,
          "locale": "en",
          "message": "OK",
          "data": {
          "current_page": 1,
          "data": [
          {
          "id": 1,
          "name": "OnSales",
          "type": "collapse",
          "content": "Xin chao ",
          "image": /storage/files/John Harry.png,
          "status": null,
          "created_at": "2020-10-01T10:27:30.000000Z",
          "updated_at": "2020-10-01T10:27:30.000000Z"
          }
          ],
          "first_page_url": "http://localhost:8000/api/v1/items?page=1",
          "from": 1,
          "last_page": 1,
          "last_page_url": "http://localhost:8000/api/v1/items?page=1",
          "path": "http://localhost:8000/api/v1/items",
          "per_page": 20,
          "prev_page_url": null,
          "to": 1,
          "total": 1
          }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/items
    metadata:
      title: 'Create new Item'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: Title
        required: false
        example: natus
        type: string
      type:
        name: type
        description: 'Type "benefit" "collapse" "featureCaller"'
        required: false
        example: quos
        type: string
      content:
        name: content
        description: Content
        required: false
        example: molestiae
        type: string
      image:
        name: image
        description: Image
        required: false
        example: est
        type: string
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "code": 200,
          "locale": "en",
          "message": "OK",
          "data": {
          "id": 1,
          "name": "OnSales",
          "type": "collapse",
          "content": "Tại sao nên dùng OnSale ",
          "image": "/storage/files/John Harry.png",
          "status": null,
          "created_at": "2020-10-01T10:27:30.000000Z",
          "updated_at": "2020-10-01T10:27:30.000000Z"
          }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/items/{id}'
    metadata:
      title: 'Get Item info'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Item ID. Ex: 1'
        required: true
        example: 6
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "code": 200,
          "locale": "en",
          "message": "OK",
          "data": {
          "current_page": 1,
          "data": [
          {
          "id": 1,
          "name": "OnSales",
          "type": "collapse",
          "content": "Xin chao ",
          "image": "/storage/files/John Harry.png",
          "status": null,
          "created_at": "2020-10-01T10:27:30.000000Z",
          "updated_at": "2020-10-01T10:27:30.000000Z"
          }
          ],
          }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/items/{id}'
    metadata:
      title: 'Update Item'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Item ID. Ex: 1'
        required: true
        example: 12
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Title Item'
        required: true
        example: reiciendis
        type: string
      type:
        name: type
        description: 'Type Item  "benefit" "collapse" "featureCaller"'
        required: true
        example: totam
        type: string
      content:
        name: content
        description: 'Content Item'
        required: true
        example: perferendis
        type: string
      image:
        name: image
        description: 'Path of Image'
        required: true
        example: aspernatur
        type: string
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "code": 200,
          "locale": "en",
          "message": "OK",
          "data": {
          "item": []
          }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/items/{id}'
    metadata:
      title: 'Delete Item'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Item ID. Ex: 1'
        required: true
        example: 4
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "success": true,
          "code": 200,
          "locale": "en",
          "message": "OK",
          "data": { }
          }
        headers: []
        description: '200'
    responseFields: []
